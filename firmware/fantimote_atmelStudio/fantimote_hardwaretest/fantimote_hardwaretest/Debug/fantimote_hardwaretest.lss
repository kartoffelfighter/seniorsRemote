
fantimote_hardwaretest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00000852  000008e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000852  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001a4  008001a4  0000098a  2**0
                  ALLOC
  3 .debug_aranges 00000058  00000000  00000000  0000098a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000095  00000000  00000000  000009e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002da  00000000  00000000  00000a77  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001d4  00000000  00000000  00000d51  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a9  00000000  00000000  00000f25  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  000011d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001cb  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000096  00000000  00000000  0000142b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000014c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:


	RXD0 = RX
	TXD0 = TX
	*/
}
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__vector_1>
   8:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e5       	ldi	r30, 0x52	; 82
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a4 3a       	cpi	r26, 0xA4	; 164
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a4 ea       	ldi	r26, 0xA4	; 164
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 3a       	cpi	r26, 0xAA	; 170
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 89 00 	call	0x112	; 0x112 <main>
  9e:	0c 94 27 04 	jmp	0x84e	; 0x84e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Init>:

void USART_Init(){
	/* set baud rate */
	UBRR0H = UBRRH_VALUE;	// calculated by library
  a6:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBRRL_VALUE;	// calculated by library
  aa:	83 e3       	ldi	r24, 0x33	; 51
  ac:	80 93 c4 00 	sts	0x00C4, r24
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
  b0:	88 e1       	ldi	r24, 0x18	; 24
  b2:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8 Data bits, 1 stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
  b6:	8e e0       	ldi	r24, 0x0E	; 14
  b8:	80 93 c2 00 	sts	0x00C2, r24

}
  bc:	08 95       	ret

000000be <USART_transmit>:

int USART_transmit(unsigned char data, FILE *stream){
  be:	98 2f       	mov	r25, r24
	while(!(UCSR0A&(1<<UDRE0))); // wait until transmit buffer is empty
  c0:	e0 ec       	ldi	r30, 0xC0	; 192
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	85 ff       	sbrs	r24, 5
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <USART_transmit+0x6>
		UDR0 = data; // write data to transmit buffer
  ca:	90 93 c6 00 	sts	0x00C6, r25
	return 0;
}
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	08 95       	ret

000000d4 <en_interrupts>:
	// set PD2 & PD3 to input:
	// - write DDxn 2 & 3 to 0,
	// - PORTxn 2 & 3 to 1, so the input pullup is set
	// -
	
	PORTD = (1<<PIND3) | (1<<PIND2);	// set pullups
  d4:	8c e0       	ldi	r24, 0x0C	; 12
  d6:	8b b9       	out	0x0b, r24	; 11
	//DDRD = (0 << DDRD3) | (0 <<DDRD2);	// set to input doesnt need to be set, is 0 when by default
	asm("nop"); // sync while nop
  d8:	00 00       	nop
	
	printf("PORTD interrupt pins set! \n");
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	91 e0       	ldi	r25, 0x01	; 1
  de:	0e 94 3e 01 	call	0x27c	; 0x27c <puts>
	// 01 = any change
	// 10 = falling edge
	// 11 = rising edge
	
	
	EICRA = 0x0A;	// enable interrupt on falling edge for int0 & int1
  e2:	8a e0       	ldi	r24, 0x0A	; 10
  e4:	80 93 69 00 	sts	0x0069, r24
	printf("falling edge int set \n");
  e8:	8b e1       	ldi	r24, 0x1B	; 27
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	0e 94 3e 01 	call	0x27c	; 0x27c <puts>
	
	EIMSK = 0x03; // turns on both external interrupts
  f0:	83 e0       	ldi	r24, 0x03	; 3
  f2:	8d bb       	out	0x1d, r24	; 29
	
	sei();
  f4:	78 94       	sei
	printf("Interrupts globally enabled!");
  f6:	00 d0       	rcall	.+0      	; 0xf8 <en_interrupts+0x24>
  f8:	81 e3       	ldi	r24, 0x31	; 49
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	ed b7       	in	r30, 0x3d	; 61
  fe:	fe b7       	in	r31, 0x3e	; 62
 100:	92 83       	std	Z+2, r25	; 0x02
 102:	81 83       	std	Z+1, r24	; 0x01
 104:	0e 94 29 01 	call	0x252	; 0x252 <printf>
 108:	0f 90       	pop	r0
 10a:	0f 90       	pop	r0
	return 1;
}
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	08 95       	ret

00000112 <main>:
	printf("INT1 triggered!");
}


int main(void)
{
 112:	cf 92       	push	r12
 114:	df 92       	push	r13
 116:	ef 92       	push	r14
 118:	ff 92       	push	r15
 11a:	0f 93       	push	r16
 11c:	1f 93       	push	r17
 11e:	df 93       	push	r29
 120:	cf 93       	push	r28
 122:	cd b7       	in	r28, 0x3d	; 61
 124:	de b7       	in	r29, 0x3e	; 62
 126:	2e 97       	sbiw	r28, 0x0e	; 14
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	de bf       	out	0x3e, r29	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	cd bf       	out	0x3d, r28	; 61
	USART_Init();
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_Init>
	FILE str_uart = FDEV_SETUP_STREAM(USART_transmit, NULL, _FDEV_SETUP_WRITE);
 136:	fe 01       	movw	r30, r28
 138:	31 96       	adiw	r30, 0x01	; 1
 13a:	8e e0       	ldi	r24, 0x0E	; 14
 13c:	df 01       	movw	r26, r30
 13e:	1d 92       	st	X+, r1
 140:	8a 95       	dec	r24
 142:	e9 f7       	brne	.-6      	; 0x13e <main+0x2c>
 144:	82 e0       	ldi	r24, 0x02	; 2
 146:	8c 83       	std	Y+4, r24	; 0x04
 148:	8f e5       	ldi	r24, 0x5F	; 95
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	9a 87       	std	Y+10, r25	; 0x0a
 14e:	89 87       	std	Y+9, r24	; 0x09
	stdout = &str_uart;
 150:	f0 93 a7 01 	sts	0x01A7, r31
 154:	e0 93 a6 01 	sts	0x01A6, r30

	
	printf("hello, world \n");
 158:	8e e4       	ldi	r24, 0x4E	; 78
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	0e 94 3e 01 	call	0x27c	; 0x27c <puts>
	printf("enabling interrupts \n");
 160:	8c e5       	ldi	r24, 0x5C	; 92
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	0e 94 3e 01 	call	0x27c	; 0x27c <puts>
	en_interrupts();
 168:	0e 94 6a 00 	call	0xd4	; 0xd4 <en_interrupts>
	
	/* Replace with your application code */
	while (1)	// loop
	{
		printf("fantimote alive! \n");
 16c:	0f 2e       	mov	r0, r31
 16e:	f1 e7       	ldi	r31, 0x71	; 113
 170:	cf 2e       	mov	r12, r31
 172:	f1 e0       	ldi	r31, 0x01	; 1
 174:	df 2e       	mov	r13, r31
 176:	f0 2d       	mov	r31, r0
 178:	0f 2e       	mov	r0, r31
 17a:	f0 e1       	ldi	r31, 0x10	; 16
 17c:	ef 2e       	mov	r14, r31
 17e:	f7 e2       	ldi	r31, 0x27	; 39
 180:	ff 2e       	mov	r15, r31
 182:	f0 2d       	mov	r31, r0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 184:	08 ec       	ldi	r16, 0xC8	; 200
 186:	10 e0       	ldi	r17, 0x00	; 0
 188:	c6 01       	movw	r24, r12
 18a:	0e 94 3e 01 	call	0x27c	; 0x27c <puts>
 18e:	97 01       	movw	r18, r14
 190:	c8 01       	movw	r24, r16
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <main+0x80>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 196:	21 50       	subi	r18, 0x01	; 1
 198:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 19a:	d1 f7       	brne	.-12     	; 0x190 <main+0x7e>
 19c:	f5 cf       	rjmp	.-22     	; 0x188 <main+0x76>

0000019e <__vector_2>:
// routines

ISR(INT0_vect){
	printf("INT0 triggered!");
}
ISR(INT1_vect){
 19e:	1f 92       	push	r1
 1a0:	0f 92       	push	r0
 1a2:	0f b6       	in	r0, 0x3f	; 63
 1a4:	0f 92       	push	r0
 1a6:	11 24       	eor	r1, r1
 1a8:	2f 93       	push	r18
 1aa:	3f 93       	push	r19
 1ac:	4f 93       	push	r20
 1ae:	5f 93       	push	r21
 1b0:	6f 93       	push	r22
 1b2:	7f 93       	push	r23
 1b4:	8f 93       	push	r24
 1b6:	9f 93       	push	r25
 1b8:	af 93       	push	r26
 1ba:	bf 93       	push	r27
 1bc:	ef 93       	push	r30
 1be:	ff 93       	push	r31
	printf("INT1 triggered!");
 1c0:	00 d0       	rcall	.+0      	; 0x1c2 <__vector_2+0x24>
 1c2:	83 e8       	ldi	r24, 0x83	; 131
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	ed b7       	in	r30, 0x3d	; 61
 1c8:	fe b7       	in	r31, 0x3e	; 62
 1ca:	92 83       	std	Z+2, r25	; 0x02
 1cc:	81 83       	std	Z+1, r24	; 0x01
 1ce:	0e 94 29 01 	call	0x252	; 0x252 <printf>
 1d2:	0f 90       	pop	r0
 1d4:	0f 90       	pop	r0
}
 1d6:	ff 91       	pop	r31
 1d8:	ef 91       	pop	r30
 1da:	bf 91       	pop	r27
 1dc:	af 91       	pop	r26
 1de:	9f 91       	pop	r25
 1e0:	8f 91       	pop	r24
 1e2:	7f 91       	pop	r23
 1e4:	6f 91       	pop	r22
 1e6:	5f 91       	pop	r21
 1e8:	4f 91       	pop	r20
 1ea:	3f 91       	pop	r19
 1ec:	2f 91       	pop	r18
 1ee:	0f 90       	pop	r0
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	0f 90       	pop	r0
 1f4:	1f 90       	pop	r1
 1f6:	18 95       	reti

000001f8 <__vector_1>:
int en_interrupts(void);	// enables the used interrupts to wake the fantimote (here: interrupts send to serial)

//---------------------------------------------------
// routines

ISR(INT0_vect){
 1f8:	1f 92       	push	r1
 1fa:	0f 92       	push	r0
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	0f 92       	push	r0
 200:	11 24       	eor	r1, r1
 202:	2f 93       	push	r18
 204:	3f 93       	push	r19
 206:	4f 93       	push	r20
 208:	5f 93       	push	r21
 20a:	6f 93       	push	r22
 20c:	7f 93       	push	r23
 20e:	8f 93       	push	r24
 210:	9f 93       	push	r25
 212:	af 93       	push	r26
 214:	bf 93       	push	r27
 216:	ef 93       	push	r30
 218:	ff 93       	push	r31
	printf("INT0 triggered!");
 21a:	00 d0       	rcall	.+0      	; 0x21c <__vector_1+0x24>
 21c:	83 e9       	ldi	r24, 0x93	; 147
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	ed b7       	in	r30, 0x3d	; 61
 222:	fe b7       	in	r31, 0x3e	; 62
 224:	92 83       	std	Z+2, r25	; 0x02
 226:	81 83       	std	Z+1, r24	; 0x01
 228:	0e 94 29 01 	call	0x252	; 0x252 <printf>
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
}
 230:	ff 91       	pop	r31
 232:	ef 91       	pop	r30
 234:	bf 91       	pop	r27
 236:	af 91       	pop	r26
 238:	9f 91       	pop	r25
 23a:	8f 91       	pop	r24
 23c:	7f 91       	pop	r23
 23e:	6f 91       	pop	r22
 240:	5f 91       	pop	r21
 242:	4f 91       	pop	r20
 244:	3f 91       	pop	r19
 246:	2f 91       	pop	r18
 248:	0f 90       	pop	r0
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	0f 90       	pop	r0
 24e:	1f 90       	pop	r1
 250:	18 95       	reti

00000252 <printf>:
 252:	a0 e0       	ldi	r26, 0x00	; 0
 254:	b0 e0       	ldi	r27, 0x00	; 0
 256:	ef e2       	ldi	r30, 0x2F	; 47
 258:	f1 e0       	ldi	r31, 0x01	; 1
 25a:	0c 94 00 04 	jmp	0x800	; 0x800 <__prologue_saves__+0x20>
 25e:	fe 01       	movw	r30, r28
 260:	35 96       	adiw	r30, 0x05	; 5
 262:	61 91       	ld	r22, Z+
 264:	71 91       	ld	r23, Z+
 266:	80 91 a6 01 	lds	r24, 0x01A6
 26a:	90 91 a7 01 	lds	r25, 0x01A7
 26e:	af 01       	movw	r20, r30
 270:	0e 94 73 01 	call	0x2e6	; 0x2e6 <vfprintf>
 274:	20 96       	adiw	r28, 0x00	; 0
 276:	e2 e0       	ldi	r30, 0x02	; 2
 278:	0c 94 1c 04 	jmp	0x838	; 0x838 <__epilogue_restores__+0x20>

0000027c <puts>:
 27c:	0f 93       	push	r16
 27e:	1f 93       	push	r17
 280:	cf 93       	push	r28
 282:	df 93       	push	r29
 284:	8c 01       	movw	r16, r24
 286:	e0 91 a6 01 	lds	r30, 0x01A6
 28a:	f0 91 a7 01 	lds	r31, 0x01A7
 28e:	83 81       	ldd	r24, Z+3	; 0x03
 290:	81 ff       	sbrs	r24, 1
 292:	21 c0       	rjmp	.+66     	; 0x2d6 <puts+0x5a>
 294:	c0 e0       	ldi	r28, 0x00	; 0
 296:	d0 e0       	ldi	r29, 0x00	; 0
 298:	0d c0       	rjmp	.+26     	; 0x2b4 <puts+0x38>
 29a:	e0 91 a6 01 	lds	r30, 0x01A6
 29e:	f0 91 a7 01 	lds	r31, 0x01A7
 2a2:	20 85       	ldd	r18, Z+8	; 0x08
 2a4:	31 85       	ldd	r19, Z+9	; 0x09
 2a6:	bf 01       	movw	r22, r30
 2a8:	f9 01       	movw	r30, r18
 2aa:	09 95       	icall
 2ac:	89 2b       	or	r24, r25
 2ae:	11 f0       	breq	.+4      	; 0x2b4 <puts+0x38>
 2b0:	cf ef       	ldi	r28, 0xFF	; 255
 2b2:	df ef       	ldi	r29, 0xFF	; 255
 2b4:	f8 01       	movw	r30, r16
 2b6:	81 91       	ld	r24, Z+
 2b8:	8f 01       	movw	r16, r30
 2ba:	88 23       	and	r24, r24
 2bc:	71 f7       	brne	.-36     	; 0x29a <puts+0x1e>
 2be:	e0 91 a6 01 	lds	r30, 0x01A6
 2c2:	f0 91 a7 01 	lds	r31, 0x01A7
 2c6:	20 85       	ldd	r18, Z+8	; 0x08
 2c8:	31 85       	ldd	r19, Z+9	; 0x09
 2ca:	8a e0       	ldi	r24, 0x0A	; 10
 2cc:	bf 01       	movw	r22, r30
 2ce:	f9 01       	movw	r30, r18
 2d0:	09 95       	icall
 2d2:	89 2b       	or	r24, r25
 2d4:	11 f0       	breq	.+4      	; 0x2da <puts+0x5e>
 2d6:	cf ef       	ldi	r28, 0xFF	; 255
 2d8:	df ef       	ldi	r29, 0xFF	; 255
 2da:	ce 01       	movw	r24, r28
 2dc:	df 91       	pop	r29
 2de:	cf 91       	pop	r28
 2e0:	1f 91       	pop	r17
 2e2:	0f 91       	pop	r16
 2e4:	08 95       	ret

000002e6 <vfprintf>:
 2e6:	ab e0       	ldi	r26, 0x0B	; 11
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	e9 e7       	ldi	r30, 0x79	; 121
 2ec:	f1 e0       	ldi	r31, 0x01	; 1
 2ee:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__prologue_saves__>
 2f2:	3c 01       	movw	r6, r24
 2f4:	2b 01       	movw	r4, r22
 2f6:	5a 01       	movw	r10, r20
 2f8:	fc 01       	movw	r30, r24
 2fa:	17 82       	std	Z+7, r1	; 0x07
 2fc:	16 82       	std	Z+6, r1	; 0x06
 2fe:	83 81       	ldd	r24, Z+3	; 0x03
 300:	81 fd       	sbrc	r24, 1
 302:	03 c0       	rjmp	.+6      	; 0x30a <vfprintf+0x24>
 304:	6f ef       	ldi	r22, 0xFF	; 255
 306:	7f ef       	ldi	r23, 0xFF	; 255
 308:	c6 c1       	rjmp	.+908    	; 0x696 <vfprintf+0x3b0>
 30a:	9a e0       	ldi	r25, 0x0A	; 10
 30c:	89 2e       	mov	r8, r25
 30e:	1e 01       	movw	r2, r28
 310:	08 94       	sec
 312:	21 1c       	adc	r2, r1
 314:	31 1c       	adc	r3, r1
 316:	f3 01       	movw	r30, r6
 318:	23 81       	ldd	r18, Z+3	; 0x03
 31a:	f2 01       	movw	r30, r4
 31c:	23 fd       	sbrc	r18, 3
 31e:	85 91       	lpm	r24, Z+
 320:	23 ff       	sbrs	r18, 3
 322:	81 91       	ld	r24, Z+
 324:	2f 01       	movw	r4, r30
 326:	88 23       	and	r24, r24
 328:	09 f4       	brne	.+2      	; 0x32c <vfprintf+0x46>
 32a:	b2 c1       	rjmp	.+868    	; 0x690 <vfprintf+0x3aa>
 32c:	85 32       	cpi	r24, 0x25	; 37
 32e:	39 f4       	brne	.+14     	; 0x33e <vfprintf+0x58>
 330:	23 fd       	sbrc	r18, 3
 332:	85 91       	lpm	r24, Z+
 334:	23 ff       	sbrs	r18, 3
 336:	81 91       	ld	r24, Z+
 338:	2f 01       	movw	r4, r30
 33a:	85 32       	cpi	r24, 0x25	; 37
 33c:	29 f4       	brne	.+10     	; 0x348 <vfprintf+0x62>
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	b3 01       	movw	r22, r6
 342:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 346:	e7 cf       	rjmp	.-50     	; 0x316 <vfprintf+0x30>
 348:	98 2f       	mov	r25, r24
 34a:	ff 24       	eor	r15, r15
 34c:	ee 24       	eor	r14, r14
 34e:	99 24       	eor	r9, r9
 350:	ff e1       	ldi	r31, 0x1F	; 31
 352:	ff 15       	cp	r31, r15
 354:	d0 f0       	brcs	.+52     	; 0x38a <vfprintf+0xa4>
 356:	9b 32       	cpi	r25, 0x2B	; 43
 358:	69 f0       	breq	.+26     	; 0x374 <vfprintf+0x8e>
 35a:	9c 32       	cpi	r25, 0x2C	; 44
 35c:	28 f4       	brcc	.+10     	; 0x368 <vfprintf+0x82>
 35e:	90 32       	cpi	r25, 0x20	; 32
 360:	59 f0       	breq	.+22     	; 0x378 <vfprintf+0x92>
 362:	93 32       	cpi	r25, 0x23	; 35
 364:	91 f4       	brne	.+36     	; 0x38a <vfprintf+0xa4>
 366:	0e c0       	rjmp	.+28     	; 0x384 <vfprintf+0x9e>
 368:	9d 32       	cpi	r25, 0x2D	; 45
 36a:	49 f0       	breq	.+18     	; 0x37e <vfprintf+0x98>
 36c:	90 33       	cpi	r25, 0x30	; 48
 36e:	69 f4       	brne	.+26     	; 0x38a <vfprintf+0xa4>
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	24 c0       	rjmp	.+72     	; 0x3bc <vfprintf+0xd6>
 374:	52 e0       	ldi	r21, 0x02	; 2
 376:	f5 2a       	or	r15, r21
 378:	84 e0       	ldi	r24, 0x04	; 4
 37a:	f8 2a       	or	r15, r24
 37c:	28 c0       	rjmp	.+80     	; 0x3ce <vfprintf+0xe8>
 37e:	98 e0       	ldi	r25, 0x08	; 8
 380:	f9 2a       	or	r15, r25
 382:	25 c0       	rjmp	.+74     	; 0x3ce <vfprintf+0xe8>
 384:	e0 e1       	ldi	r30, 0x10	; 16
 386:	fe 2a       	or	r15, r30
 388:	22 c0       	rjmp	.+68     	; 0x3ce <vfprintf+0xe8>
 38a:	f7 fc       	sbrc	r15, 7
 38c:	29 c0       	rjmp	.+82     	; 0x3e0 <vfprintf+0xfa>
 38e:	89 2f       	mov	r24, r25
 390:	80 53       	subi	r24, 0x30	; 48
 392:	8a 30       	cpi	r24, 0x0A	; 10
 394:	70 f4       	brcc	.+28     	; 0x3b2 <vfprintf+0xcc>
 396:	f6 fe       	sbrs	r15, 6
 398:	05 c0       	rjmp	.+10     	; 0x3a4 <vfprintf+0xbe>
 39a:	98 9c       	mul	r9, r8
 39c:	90 2c       	mov	r9, r0
 39e:	11 24       	eor	r1, r1
 3a0:	98 0e       	add	r9, r24
 3a2:	15 c0       	rjmp	.+42     	; 0x3ce <vfprintf+0xe8>
 3a4:	e8 9c       	mul	r14, r8
 3a6:	e0 2c       	mov	r14, r0
 3a8:	11 24       	eor	r1, r1
 3aa:	e8 0e       	add	r14, r24
 3ac:	f0 e2       	ldi	r31, 0x20	; 32
 3ae:	ff 2a       	or	r15, r31
 3b0:	0e c0       	rjmp	.+28     	; 0x3ce <vfprintf+0xe8>
 3b2:	9e 32       	cpi	r25, 0x2E	; 46
 3b4:	29 f4       	brne	.+10     	; 0x3c0 <vfprintf+0xda>
 3b6:	f6 fc       	sbrc	r15, 6
 3b8:	6b c1       	rjmp	.+726    	; 0x690 <vfprintf+0x3aa>
 3ba:	40 e4       	ldi	r20, 0x40	; 64
 3bc:	f4 2a       	or	r15, r20
 3be:	07 c0       	rjmp	.+14     	; 0x3ce <vfprintf+0xe8>
 3c0:	9c 36       	cpi	r25, 0x6C	; 108
 3c2:	19 f4       	brne	.+6      	; 0x3ca <vfprintf+0xe4>
 3c4:	50 e8       	ldi	r21, 0x80	; 128
 3c6:	f5 2a       	or	r15, r21
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <vfprintf+0xe8>
 3ca:	98 36       	cpi	r25, 0x68	; 104
 3cc:	49 f4       	brne	.+18     	; 0x3e0 <vfprintf+0xfa>
 3ce:	f2 01       	movw	r30, r4
 3d0:	23 fd       	sbrc	r18, 3
 3d2:	95 91       	lpm	r25, Z+
 3d4:	23 ff       	sbrs	r18, 3
 3d6:	91 91       	ld	r25, Z+
 3d8:	2f 01       	movw	r4, r30
 3da:	99 23       	and	r25, r25
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <vfprintf+0xfa>
 3de:	b8 cf       	rjmp	.-144    	; 0x350 <vfprintf+0x6a>
 3e0:	89 2f       	mov	r24, r25
 3e2:	85 54       	subi	r24, 0x45	; 69
 3e4:	83 30       	cpi	r24, 0x03	; 3
 3e6:	18 f0       	brcs	.+6      	; 0x3ee <vfprintf+0x108>
 3e8:	80 52       	subi	r24, 0x20	; 32
 3ea:	83 30       	cpi	r24, 0x03	; 3
 3ec:	38 f4       	brcc	.+14     	; 0x3fc <vfprintf+0x116>
 3ee:	44 e0       	ldi	r20, 0x04	; 4
 3f0:	50 e0       	ldi	r21, 0x00	; 0
 3f2:	a4 0e       	add	r10, r20
 3f4:	b5 1e       	adc	r11, r21
 3f6:	5f e3       	ldi	r21, 0x3F	; 63
 3f8:	59 83       	std	Y+1, r21	; 0x01
 3fa:	0f c0       	rjmp	.+30     	; 0x41a <vfprintf+0x134>
 3fc:	93 36       	cpi	r25, 0x63	; 99
 3fe:	31 f0       	breq	.+12     	; 0x40c <vfprintf+0x126>
 400:	93 37       	cpi	r25, 0x73	; 115
 402:	79 f0       	breq	.+30     	; 0x422 <vfprintf+0x13c>
 404:	93 35       	cpi	r25, 0x53	; 83
 406:	09 f0       	breq	.+2      	; 0x40a <vfprintf+0x124>
 408:	56 c0       	rjmp	.+172    	; 0x4b6 <vfprintf+0x1d0>
 40a:	20 c0       	rjmp	.+64     	; 0x44c <vfprintf+0x166>
 40c:	f5 01       	movw	r30, r10
 40e:	80 81       	ld	r24, Z
 410:	89 83       	std	Y+1, r24	; 0x01
 412:	42 e0       	ldi	r20, 0x02	; 2
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	a4 0e       	add	r10, r20
 418:	b5 1e       	adc	r11, r21
 41a:	61 01       	movw	r12, r2
 41c:	01 e0       	ldi	r16, 0x01	; 1
 41e:	10 e0       	ldi	r17, 0x00	; 0
 420:	12 c0       	rjmp	.+36     	; 0x446 <vfprintf+0x160>
 422:	f5 01       	movw	r30, r10
 424:	c0 80       	ld	r12, Z
 426:	d1 80       	ldd	r13, Z+1	; 0x01
 428:	f6 fc       	sbrc	r15, 6
 42a:	03 c0       	rjmp	.+6      	; 0x432 <vfprintf+0x14c>
 42c:	6f ef       	ldi	r22, 0xFF	; 255
 42e:	7f ef       	ldi	r23, 0xFF	; 255
 430:	02 c0       	rjmp	.+4      	; 0x436 <vfprintf+0x150>
 432:	69 2d       	mov	r22, r9
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	42 e0       	ldi	r20, 0x02	; 2
 438:	50 e0       	ldi	r21, 0x00	; 0
 43a:	a4 0e       	add	r10, r20
 43c:	b5 1e       	adc	r11, r21
 43e:	c6 01       	movw	r24, r12
 440:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <strnlen>
 444:	8c 01       	movw	r16, r24
 446:	5f e7       	ldi	r21, 0x7F	; 127
 448:	f5 22       	and	r15, r21
 44a:	14 c0       	rjmp	.+40     	; 0x474 <vfprintf+0x18e>
 44c:	f5 01       	movw	r30, r10
 44e:	c0 80       	ld	r12, Z
 450:	d1 80       	ldd	r13, Z+1	; 0x01
 452:	f6 fc       	sbrc	r15, 6
 454:	03 c0       	rjmp	.+6      	; 0x45c <vfprintf+0x176>
 456:	6f ef       	ldi	r22, 0xFF	; 255
 458:	7f ef       	ldi	r23, 0xFF	; 255
 45a:	02 c0       	rjmp	.+4      	; 0x460 <vfprintf+0x17a>
 45c:	69 2d       	mov	r22, r9
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	42 e0       	ldi	r20, 0x02	; 2
 462:	50 e0       	ldi	r21, 0x00	; 0
 464:	a4 0e       	add	r10, r20
 466:	b5 1e       	adc	r11, r21
 468:	c6 01       	movw	r24, r12
 46a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <strnlen_P>
 46e:	8c 01       	movw	r16, r24
 470:	50 e8       	ldi	r21, 0x80	; 128
 472:	f5 2a       	or	r15, r21
 474:	f3 fe       	sbrs	r15, 3
 476:	07 c0       	rjmp	.+14     	; 0x486 <vfprintf+0x1a0>
 478:	1a c0       	rjmp	.+52     	; 0x4ae <vfprintf+0x1c8>
 47a:	80 e2       	ldi	r24, 0x20	; 32
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	b3 01       	movw	r22, r6
 480:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 484:	ea 94       	dec	r14
 486:	8e 2d       	mov	r24, r14
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	08 17       	cp	r16, r24
 48c:	19 07       	cpc	r17, r25
 48e:	a8 f3       	brcs	.-22     	; 0x47a <vfprintf+0x194>
 490:	0e c0       	rjmp	.+28     	; 0x4ae <vfprintf+0x1c8>
 492:	f6 01       	movw	r30, r12
 494:	f7 fc       	sbrc	r15, 7
 496:	85 91       	lpm	r24, Z+
 498:	f7 fe       	sbrs	r15, 7
 49a:	81 91       	ld	r24, Z+
 49c:	6f 01       	movw	r12, r30
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	b3 01       	movw	r22, r6
 4a2:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 4a6:	e1 10       	cpse	r14, r1
 4a8:	ea 94       	dec	r14
 4aa:	01 50       	subi	r16, 0x01	; 1
 4ac:	10 40       	sbci	r17, 0x00	; 0
 4ae:	01 15       	cp	r16, r1
 4b0:	11 05       	cpc	r17, r1
 4b2:	79 f7       	brne	.-34     	; 0x492 <vfprintf+0x1ac>
 4b4:	ea c0       	rjmp	.+468    	; 0x68a <vfprintf+0x3a4>
 4b6:	94 36       	cpi	r25, 0x64	; 100
 4b8:	11 f0       	breq	.+4      	; 0x4be <vfprintf+0x1d8>
 4ba:	99 36       	cpi	r25, 0x69	; 105
 4bc:	69 f5       	brne	.+90     	; 0x518 <vfprintf+0x232>
 4be:	f7 fe       	sbrs	r15, 7
 4c0:	08 c0       	rjmp	.+16     	; 0x4d2 <vfprintf+0x1ec>
 4c2:	f5 01       	movw	r30, r10
 4c4:	20 81       	ld	r18, Z
 4c6:	31 81       	ldd	r19, Z+1	; 0x01
 4c8:	42 81       	ldd	r20, Z+2	; 0x02
 4ca:	53 81       	ldd	r21, Z+3	; 0x03
 4cc:	84 e0       	ldi	r24, 0x04	; 4
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0a c0       	rjmp	.+20     	; 0x4e6 <vfprintf+0x200>
 4d2:	f5 01       	movw	r30, r10
 4d4:	80 81       	ld	r24, Z
 4d6:	91 81       	ldd	r25, Z+1	; 0x01
 4d8:	9c 01       	movw	r18, r24
 4da:	44 27       	eor	r20, r20
 4dc:	37 fd       	sbrc	r19, 7
 4de:	40 95       	com	r20
 4e0:	54 2f       	mov	r21, r20
 4e2:	82 e0       	ldi	r24, 0x02	; 2
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	a8 0e       	add	r10, r24
 4e8:	b9 1e       	adc	r11, r25
 4ea:	9f e6       	ldi	r25, 0x6F	; 111
 4ec:	f9 22       	and	r15, r25
 4ee:	57 ff       	sbrs	r21, 7
 4f0:	09 c0       	rjmp	.+18     	; 0x504 <vfprintf+0x21e>
 4f2:	50 95       	com	r21
 4f4:	40 95       	com	r20
 4f6:	30 95       	com	r19
 4f8:	21 95       	neg	r18
 4fa:	3f 4f       	sbci	r19, 0xFF	; 255
 4fc:	4f 4f       	sbci	r20, 0xFF	; 255
 4fe:	5f 4f       	sbci	r21, 0xFF	; 255
 500:	e0 e8       	ldi	r30, 0x80	; 128
 502:	fe 2a       	or	r15, r30
 504:	ca 01       	movw	r24, r20
 506:	b9 01       	movw	r22, r18
 508:	a1 01       	movw	r20, r2
 50a:	2a e0       	ldi	r18, 0x0A	; 10
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	0e 94 92 03 	call	0x724	; 0x724 <__ultoa_invert>
 512:	d8 2e       	mov	r13, r24
 514:	d2 18       	sub	r13, r2
 516:	40 c0       	rjmp	.+128    	; 0x598 <vfprintf+0x2b2>
 518:	95 37       	cpi	r25, 0x75	; 117
 51a:	29 f4       	brne	.+10     	; 0x526 <vfprintf+0x240>
 51c:	1f 2d       	mov	r17, r15
 51e:	1f 7e       	andi	r17, 0xEF	; 239
 520:	2a e0       	ldi	r18, 0x0A	; 10
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	1d c0       	rjmp	.+58     	; 0x560 <vfprintf+0x27a>
 526:	1f 2d       	mov	r17, r15
 528:	19 7f       	andi	r17, 0xF9	; 249
 52a:	9f 36       	cpi	r25, 0x6F	; 111
 52c:	61 f0       	breq	.+24     	; 0x546 <vfprintf+0x260>
 52e:	90 37       	cpi	r25, 0x70	; 112
 530:	20 f4       	brcc	.+8      	; 0x53a <vfprintf+0x254>
 532:	98 35       	cpi	r25, 0x58	; 88
 534:	09 f0       	breq	.+2      	; 0x538 <vfprintf+0x252>
 536:	ac c0       	rjmp	.+344    	; 0x690 <vfprintf+0x3aa>
 538:	0f c0       	rjmp	.+30     	; 0x558 <vfprintf+0x272>
 53a:	90 37       	cpi	r25, 0x70	; 112
 53c:	39 f0       	breq	.+14     	; 0x54c <vfprintf+0x266>
 53e:	98 37       	cpi	r25, 0x78	; 120
 540:	09 f0       	breq	.+2      	; 0x544 <vfprintf+0x25e>
 542:	a6 c0       	rjmp	.+332    	; 0x690 <vfprintf+0x3aa>
 544:	04 c0       	rjmp	.+8      	; 0x54e <vfprintf+0x268>
 546:	28 e0       	ldi	r18, 0x08	; 8
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	0a c0       	rjmp	.+20     	; 0x560 <vfprintf+0x27a>
 54c:	10 61       	ori	r17, 0x10	; 16
 54e:	14 fd       	sbrc	r17, 4
 550:	14 60       	ori	r17, 0x04	; 4
 552:	20 e1       	ldi	r18, 0x10	; 16
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	04 c0       	rjmp	.+8      	; 0x560 <vfprintf+0x27a>
 558:	14 fd       	sbrc	r17, 4
 55a:	16 60       	ori	r17, 0x06	; 6
 55c:	20 e1       	ldi	r18, 0x10	; 16
 55e:	32 e0       	ldi	r19, 0x02	; 2
 560:	17 ff       	sbrs	r17, 7
 562:	08 c0       	rjmp	.+16     	; 0x574 <vfprintf+0x28e>
 564:	f5 01       	movw	r30, r10
 566:	60 81       	ld	r22, Z
 568:	71 81       	ldd	r23, Z+1	; 0x01
 56a:	82 81       	ldd	r24, Z+2	; 0x02
 56c:	93 81       	ldd	r25, Z+3	; 0x03
 56e:	44 e0       	ldi	r20, 0x04	; 4
 570:	50 e0       	ldi	r21, 0x00	; 0
 572:	08 c0       	rjmp	.+16     	; 0x584 <vfprintf+0x29e>
 574:	f5 01       	movw	r30, r10
 576:	80 81       	ld	r24, Z
 578:	91 81       	ldd	r25, Z+1	; 0x01
 57a:	bc 01       	movw	r22, r24
 57c:	80 e0       	ldi	r24, 0x00	; 0
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	42 e0       	ldi	r20, 0x02	; 2
 582:	50 e0       	ldi	r21, 0x00	; 0
 584:	a4 0e       	add	r10, r20
 586:	b5 1e       	adc	r11, r21
 588:	a1 01       	movw	r20, r2
 58a:	0e 94 92 03 	call	0x724	; 0x724 <__ultoa_invert>
 58e:	d8 2e       	mov	r13, r24
 590:	d2 18       	sub	r13, r2
 592:	8f e7       	ldi	r24, 0x7F	; 127
 594:	f8 2e       	mov	r15, r24
 596:	f1 22       	and	r15, r17
 598:	f6 fe       	sbrs	r15, 6
 59a:	0b c0       	rjmp	.+22     	; 0x5b2 <vfprintf+0x2cc>
 59c:	5e ef       	ldi	r21, 0xFE	; 254
 59e:	f5 22       	and	r15, r21
 5a0:	d9 14       	cp	r13, r9
 5a2:	38 f4       	brcc	.+14     	; 0x5b2 <vfprintf+0x2cc>
 5a4:	f4 fe       	sbrs	r15, 4
 5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <vfprintf+0x2d0>
 5a8:	f2 fc       	sbrc	r15, 2
 5aa:	05 c0       	rjmp	.+10     	; 0x5b6 <vfprintf+0x2d0>
 5ac:	8f ee       	ldi	r24, 0xEF	; 239
 5ae:	f8 22       	and	r15, r24
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <vfprintf+0x2d0>
 5b2:	1d 2d       	mov	r17, r13
 5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <vfprintf+0x2d2>
 5b6:	19 2d       	mov	r17, r9
 5b8:	f4 fe       	sbrs	r15, 4
 5ba:	0d c0       	rjmp	.+26     	; 0x5d6 <vfprintf+0x2f0>
 5bc:	fe 01       	movw	r30, r28
 5be:	ed 0d       	add	r30, r13
 5c0:	f1 1d       	adc	r31, r1
 5c2:	80 81       	ld	r24, Z
 5c4:	80 33       	cpi	r24, 0x30	; 48
 5c6:	19 f4       	brne	.+6      	; 0x5ce <vfprintf+0x2e8>
 5c8:	99 ee       	ldi	r25, 0xE9	; 233
 5ca:	f9 22       	and	r15, r25
 5cc:	08 c0       	rjmp	.+16     	; 0x5de <vfprintf+0x2f8>
 5ce:	1f 5f       	subi	r17, 0xFF	; 255
 5d0:	f2 fe       	sbrs	r15, 2
 5d2:	05 c0       	rjmp	.+10     	; 0x5de <vfprintf+0x2f8>
 5d4:	03 c0       	rjmp	.+6      	; 0x5dc <vfprintf+0x2f6>
 5d6:	8f 2d       	mov	r24, r15
 5d8:	86 78       	andi	r24, 0x86	; 134
 5da:	09 f0       	breq	.+2      	; 0x5de <vfprintf+0x2f8>
 5dc:	1f 5f       	subi	r17, 0xFF	; 255
 5de:	0f 2d       	mov	r16, r15
 5e0:	f3 fc       	sbrc	r15, 3
 5e2:	14 c0       	rjmp	.+40     	; 0x60c <vfprintf+0x326>
 5e4:	f0 fe       	sbrs	r15, 0
 5e6:	0f c0       	rjmp	.+30     	; 0x606 <vfprintf+0x320>
 5e8:	1e 15       	cp	r17, r14
 5ea:	10 f0       	brcs	.+4      	; 0x5f0 <vfprintf+0x30a>
 5ec:	9d 2c       	mov	r9, r13
 5ee:	0b c0       	rjmp	.+22     	; 0x606 <vfprintf+0x320>
 5f0:	9d 2c       	mov	r9, r13
 5f2:	9e 0c       	add	r9, r14
 5f4:	91 1a       	sub	r9, r17
 5f6:	1e 2d       	mov	r17, r14
 5f8:	06 c0       	rjmp	.+12     	; 0x606 <vfprintf+0x320>
 5fa:	80 e2       	ldi	r24, 0x20	; 32
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	b3 01       	movw	r22, r6
 600:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 604:	1f 5f       	subi	r17, 0xFF	; 255
 606:	1e 15       	cp	r17, r14
 608:	c0 f3       	brcs	.-16     	; 0x5fa <vfprintf+0x314>
 60a:	04 c0       	rjmp	.+8      	; 0x614 <vfprintf+0x32e>
 60c:	1e 15       	cp	r17, r14
 60e:	10 f4       	brcc	.+4      	; 0x614 <vfprintf+0x32e>
 610:	e1 1a       	sub	r14, r17
 612:	01 c0       	rjmp	.+2      	; 0x616 <vfprintf+0x330>
 614:	ee 24       	eor	r14, r14
 616:	04 ff       	sbrs	r16, 4
 618:	0f c0       	rjmp	.+30     	; 0x638 <vfprintf+0x352>
 61a:	80 e3       	ldi	r24, 0x30	; 48
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	b3 01       	movw	r22, r6
 620:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 624:	02 ff       	sbrs	r16, 2
 626:	1d c0       	rjmp	.+58     	; 0x662 <vfprintf+0x37c>
 628:	01 fd       	sbrc	r16, 1
 62a:	03 c0       	rjmp	.+6      	; 0x632 <vfprintf+0x34c>
 62c:	88 e7       	ldi	r24, 0x78	; 120
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e c0       	rjmp	.+28     	; 0x64e <vfprintf+0x368>
 632:	88 e5       	ldi	r24, 0x58	; 88
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0b c0       	rjmp	.+22     	; 0x64e <vfprintf+0x368>
 638:	80 2f       	mov	r24, r16
 63a:	86 78       	andi	r24, 0x86	; 134
 63c:	91 f0       	breq	.+36     	; 0x662 <vfprintf+0x37c>
 63e:	01 ff       	sbrs	r16, 1
 640:	02 c0       	rjmp	.+4      	; 0x646 <vfprintf+0x360>
 642:	8b e2       	ldi	r24, 0x2B	; 43
 644:	01 c0       	rjmp	.+2      	; 0x648 <vfprintf+0x362>
 646:	80 e2       	ldi	r24, 0x20	; 32
 648:	f7 fc       	sbrc	r15, 7
 64a:	8d e2       	ldi	r24, 0x2D	; 45
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	b3 01       	movw	r22, r6
 650:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 654:	06 c0       	rjmp	.+12     	; 0x662 <vfprintf+0x37c>
 656:	80 e3       	ldi	r24, 0x30	; 48
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	b3 01       	movw	r22, r6
 65c:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 660:	9a 94       	dec	r9
 662:	d9 14       	cp	r13, r9
 664:	c0 f3       	brcs	.-16     	; 0x656 <vfprintf+0x370>
 666:	da 94       	dec	r13
 668:	f1 01       	movw	r30, r2
 66a:	ed 0d       	add	r30, r13
 66c:	f1 1d       	adc	r31, r1
 66e:	80 81       	ld	r24, Z
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	b3 01       	movw	r22, r6
 674:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 678:	dd 20       	and	r13, r13
 67a:	a9 f7       	brne	.-22     	; 0x666 <vfprintf+0x380>
 67c:	06 c0       	rjmp	.+12     	; 0x68a <vfprintf+0x3a4>
 67e:	80 e2       	ldi	r24, 0x20	; 32
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	b3 01       	movw	r22, r6
 684:	0e 94 66 03 	call	0x6cc	; 0x6cc <fputc>
 688:	ea 94       	dec	r14
 68a:	ee 20       	and	r14, r14
 68c:	c1 f7       	brne	.-16     	; 0x67e <vfprintf+0x398>
 68e:	43 ce       	rjmp	.-890    	; 0x316 <vfprintf+0x30>
 690:	f3 01       	movw	r30, r6
 692:	66 81       	ldd	r22, Z+6	; 0x06
 694:	77 81       	ldd	r23, Z+7	; 0x07
 696:	cb 01       	movw	r24, r22
 698:	2b 96       	adiw	r28, 0x0b	; 11
 69a:	e2 e1       	ldi	r30, 0x12	; 18
 69c:	0c 94 0c 04 	jmp	0x818	; 0x818 <__epilogue_restores__>

000006a0 <strnlen_P>:
 6a0:	fc 01       	movw	r30, r24
 6a2:	05 90       	lpm	r0, Z+
 6a4:	61 50       	subi	r22, 0x01	; 1
 6a6:	70 40       	sbci	r23, 0x00	; 0
 6a8:	01 10       	cpse	r0, r1
 6aa:	d8 f7       	brcc	.-10     	; 0x6a2 <strnlen_P+0x2>
 6ac:	80 95       	com	r24
 6ae:	90 95       	com	r25
 6b0:	8e 0f       	add	r24, r30
 6b2:	9f 1f       	adc	r25, r31
 6b4:	08 95       	ret

000006b6 <strnlen>:
 6b6:	fc 01       	movw	r30, r24
 6b8:	61 50       	subi	r22, 0x01	; 1
 6ba:	70 40       	sbci	r23, 0x00	; 0
 6bc:	01 90       	ld	r0, Z+
 6be:	01 10       	cpse	r0, r1
 6c0:	d8 f7       	brcc	.-10     	; 0x6b8 <strnlen+0x2>
 6c2:	80 95       	com	r24
 6c4:	90 95       	com	r25
 6c6:	8e 0f       	add	r24, r30
 6c8:	9f 1f       	adc	r25, r31
 6ca:	08 95       	ret

000006cc <fputc>:
 6cc:	0f 93       	push	r16
 6ce:	1f 93       	push	r17
 6d0:	cf 93       	push	r28
 6d2:	df 93       	push	r29
 6d4:	8c 01       	movw	r16, r24
 6d6:	eb 01       	movw	r28, r22
 6d8:	8b 81       	ldd	r24, Y+3	; 0x03
 6da:	81 ff       	sbrs	r24, 1
 6dc:	1b c0       	rjmp	.+54     	; 0x714 <fputc+0x48>
 6de:	82 ff       	sbrs	r24, 2
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <fputc+0x30>
 6e2:	2e 81       	ldd	r18, Y+6	; 0x06
 6e4:	3f 81       	ldd	r19, Y+7	; 0x07
 6e6:	8c 81       	ldd	r24, Y+4	; 0x04
 6e8:	9d 81       	ldd	r25, Y+5	; 0x05
 6ea:	28 17       	cp	r18, r24
 6ec:	39 07       	cpc	r19, r25
 6ee:	64 f4       	brge	.+24     	; 0x708 <fputc+0x3c>
 6f0:	e8 81       	ld	r30, Y
 6f2:	f9 81       	ldd	r31, Y+1	; 0x01
 6f4:	01 93       	st	Z+, r16
 6f6:	f9 83       	std	Y+1, r31	; 0x01
 6f8:	e8 83       	st	Y, r30
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <fputc+0x3c>
 6fc:	e8 85       	ldd	r30, Y+8	; 0x08
 6fe:	f9 85       	ldd	r31, Y+9	; 0x09
 700:	80 2f       	mov	r24, r16
 702:	09 95       	icall
 704:	89 2b       	or	r24, r25
 706:	31 f4       	brne	.+12     	; 0x714 <fputc+0x48>
 708:	8e 81       	ldd	r24, Y+6	; 0x06
 70a:	9f 81       	ldd	r25, Y+7	; 0x07
 70c:	01 96       	adiw	r24, 0x01	; 1
 70e:	9f 83       	std	Y+7, r25	; 0x07
 710:	8e 83       	std	Y+6, r24	; 0x06
 712:	02 c0       	rjmp	.+4      	; 0x718 <fputc+0x4c>
 714:	0f ef       	ldi	r16, 0xFF	; 255
 716:	1f ef       	ldi	r17, 0xFF	; 255
 718:	c8 01       	movw	r24, r16
 71a:	df 91       	pop	r29
 71c:	cf 91       	pop	r28
 71e:	1f 91       	pop	r17
 720:	0f 91       	pop	r16
 722:	08 95       	ret

00000724 <__ultoa_invert>:
 724:	fa 01       	movw	r30, r20
 726:	aa 27       	eor	r26, r26
 728:	28 30       	cpi	r18, 0x08	; 8
 72a:	51 f1       	breq	.+84     	; 0x780 <__ultoa_invert+0x5c>
 72c:	20 31       	cpi	r18, 0x10	; 16
 72e:	81 f1       	breq	.+96     	; 0x790 <__ultoa_invert+0x6c>
 730:	e8 94       	clt
 732:	6f 93       	push	r22
 734:	6e 7f       	andi	r22, 0xFE	; 254
 736:	6e 5f       	subi	r22, 0xFE	; 254
 738:	7f 4f       	sbci	r23, 0xFF	; 255
 73a:	8f 4f       	sbci	r24, 0xFF	; 255
 73c:	9f 4f       	sbci	r25, 0xFF	; 255
 73e:	af 4f       	sbci	r26, 0xFF	; 255
 740:	b1 e0       	ldi	r27, 0x01	; 1
 742:	3e d0       	rcall	.+124    	; 0x7c0 <__ultoa_invert+0x9c>
 744:	b4 e0       	ldi	r27, 0x04	; 4
 746:	3c d0       	rcall	.+120    	; 0x7c0 <__ultoa_invert+0x9c>
 748:	67 0f       	add	r22, r23
 74a:	78 1f       	adc	r23, r24
 74c:	89 1f       	adc	r24, r25
 74e:	9a 1f       	adc	r25, r26
 750:	a1 1d       	adc	r26, r1
 752:	68 0f       	add	r22, r24
 754:	79 1f       	adc	r23, r25
 756:	8a 1f       	adc	r24, r26
 758:	91 1d       	adc	r25, r1
 75a:	a1 1d       	adc	r26, r1
 75c:	6a 0f       	add	r22, r26
 75e:	71 1d       	adc	r23, r1
 760:	81 1d       	adc	r24, r1
 762:	91 1d       	adc	r25, r1
 764:	a1 1d       	adc	r26, r1
 766:	20 d0       	rcall	.+64     	; 0x7a8 <__ultoa_invert+0x84>
 768:	09 f4       	brne	.+2      	; 0x76c <__ultoa_invert+0x48>
 76a:	68 94       	set
 76c:	3f 91       	pop	r19
 76e:	2a e0       	ldi	r18, 0x0A	; 10
 770:	26 9f       	mul	r18, r22
 772:	11 24       	eor	r1, r1
 774:	30 19       	sub	r19, r0
 776:	30 5d       	subi	r19, 0xD0	; 208
 778:	31 93       	st	Z+, r19
 77a:	de f6       	brtc	.-74     	; 0x732 <__ultoa_invert+0xe>
 77c:	cf 01       	movw	r24, r30
 77e:	08 95       	ret
 780:	46 2f       	mov	r20, r22
 782:	47 70       	andi	r20, 0x07	; 7
 784:	40 5d       	subi	r20, 0xD0	; 208
 786:	41 93       	st	Z+, r20
 788:	b3 e0       	ldi	r27, 0x03	; 3
 78a:	0f d0       	rcall	.+30     	; 0x7aa <__ultoa_invert+0x86>
 78c:	c9 f7       	brne	.-14     	; 0x780 <__ultoa_invert+0x5c>
 78e:	f6 cf       	rjmp	.-20     	; 0x77c <__ultoa_invert+0x58>
 790:	46 2f       	mov	r20, r22
 792:	4f 70       	andi	r20, 0x0F	; 15
 794:	40 5d       	subi	r20, 0xD0	; 208
 796:	4a 33       	cpi	r20, 0x3A	; 58
 798:	18 f0       	brcs	.+6      	; 0x7a0 <__ultoa_invert+0x7c>
 79a:	49 5d       	subi	r20, 0xD9	; 217
 79c:	31 fd       	sbrc	r19, 1
 79e:	40 52       	subi	r20, 0x20	; 32
 7a0:	41 93       	st	Z+, r20
 7a2:	02 d0       	rcall	.+4      	; 0x7a8 <__ultoa_invert+0x84>
 7a4:	a9 f7       	brne	.-22     	; 0x790 <__ultoa_invert+0x6c>
 7a6:	ea cf       	rjmp	.-44     	; 0x77c <__ultoa_invert+0x58>
 7a8:	b4 e0       	ldi	r27, 0x04	; 4
 7aa:	a6 95       	lsr	r26
 7ac:	97 95       	ror	r25
 7ae:	87 95       	ror	r24
 7b0:	77 95       	ror	r23
 7b2:	67 95       	ror	r22
 7b4:	ba 95       	dec	r27
 7b6:	c9 f7       	brne	.-14     	; 0x7aa <__ultoa_invert+0x86>
 7b8:	00 97       	sbiw	r24, 0x00	; 0
 7ba:	61 05       	cpc	r22, r1
 7bc:	71 05       	cpc	r23, r1
 7be:	08 95       	ret
 7c0:	9b 01       	movw	r18, r22
 7c2:	ac 01       	movw	r20, r24
 7c4:	0a 2e       	mov	r0, r26
 7c6:	06 94       	lsr	r0
 7c8:	57 95       	ror	r21
 7ca:	47 95       	ror	r20
 7cc:	37 95       	ror	r19
 7ce:	27 95       	ror	r18
 7d0:	ba 95       	dec	r27
 7d2:	c9 f7       	brne	.-14     	; 0x7c6 <__ultoa_invert+0xa2>
 7d4:	62 0f       	add	r22, r18
 7d6:	73 1f       	adc	r23, r19
 7d8:	84 1f       	adc	r24, r20
 7da:	95 1f       	adc	r25, r21
 7dc:	a0 1d       	adc	r26, r0
 7de:	08 95       	ret

000007e0 <__prologue_saves__>:
 7e0:	2f 92       	push	r2
 7e2:	3f 92       	push	r3
 7e4:	4f 92       	push	r4
 7e6:	5f 92       	push	r5
 7e8:	6f 92       	push	r6
 7ea:	7f 92       	push	r7
 7ec:	8f 92       	push	r8
 7ee:	9f 92       	push	r9
 7f0:	af 92       	push	r10
 7f2:	bf 92       	push	r11
 7f4:	cf 92       	push	r12
 7f6:	df 92       	push	r13
 7f8:	ef 92       	push	r14
 7fa:	ff 92       	push	r15
 7fc:	0f 93       	push	r16
 7fe:	1f 93       	push	r17
 800:	cf 93       	push	r28
 802:	df 93       	push	r29
 804:	cd b7       	in	r28, 0x3d	; 61
 806:	de b7       	in	r29, 0x3e	; 62
 808:	ca 1b       	sub	r28, r26
 80a:	db 0b       	sbc	r29, r27
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	09 94       	ijmp

00000818 <__epilogue_restores__>:
 818:	2a 88       	ldd	r2, Y+18	; 0x12
 81a:	39 88       	ldd	r3, Y+17	; 0x11
 81c:	48 88       	ldd	r4, Y+16	; 0x10
 81e:	5f 84       	ldd	r5, Y+15	; 0x0f
 820:	6e 84       	ldd	r6, Y+14	; 0x0e
 822:	7d 84       	ldd	r7, Y+13	; 0x0d
 824:	8c 84       	ldd	r8, Y+12	; 0x0c
 826:	9b 84       	ldd	r9, Y+11	; 0x0b
 828:	aa 84       	ldd	r10, Y+10	; 0x0a
 82a:	b9 84       	ldd	r11, Y+9	; 0x09
 82c:	c8 84       	ldd	r12, Y+8	; 0x08
 82e:	df 80       	ldd	r13, Y+7	; 0x07
 830:	ee 80       	ldd	r14, Y+6	; 0x06
 832:	fd 80       	ldd	r15, Y+5	; 0x05
 834:	0c 81       	ldd	r16, Y+4	; 0x04
 836:	1b 81       	ldd	r17, Y+3	; 0x03
 838:	aa 81       	ldd	r26, Y+2	; 0x02
 83a:	b9 81       	ldd	r27, Y+1	; 0x01
 83c:	ce 0f       	add	r28, r30
 83e:	d1 1d       	adc	r29, r1
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
 84a:	ed 01       	movw	r28, r26
 84c:	08 95       	ret

0000084e <_exit>:
 84e:	f8 94       	cli

00000850 <__stop_program>:
 850:	ff cf       	rjmp	.-2      	; 0x850 <__stop_program>
